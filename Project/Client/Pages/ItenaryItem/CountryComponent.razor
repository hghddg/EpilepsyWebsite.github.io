@inject HttpClient _client

<EditForm Model="@itenaryitem" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disbled="@Disabled">

        <div class="form-group">
            <label>Country: </label>
            <div>
                <InputSelect @bind-Value="itenaryitem.CountryId" class="form-control">
                    <option value="">-- Select Country --</option>
                    @if (Countries != null)
                    {
                        foreach (var country in Countries)
                        {
                            <option value="@country.Id">@country.Name</option>
                        }
                    }
                </InputSelect>

                <ValidationMessage For="@(() => itenaryitem.CountryId)" />
            </div>
        </div>
    </fieldset>

        @if (!Disabled)
        {

            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }
        <BackToList Target="itenaryitems" />
</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public ItenaryItem itenaryitem { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    public int tempid;

    private IList<Country> Countries;


    protected async override Task OnInitializedAsync()
    {
        Countries = await _client.GetFromJsonAsync<List<Country>>($"{Endpoint.CountryEndpoint}");
    }

}

