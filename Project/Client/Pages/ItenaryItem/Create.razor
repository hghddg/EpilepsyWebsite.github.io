@page "/itenaryitems/create/"
@inject HttpClient _client
@inject NavigationManager _navManager


<h3 class="card-title">Create New ItenaryItems</h3>
<hr />
<br />

<FormComponent ButtonText="Create Itenary Item" itenaryitem="itenaryitem" OnValidSubmit="@CreateItenaryItem" />



@code {

    ItenaryItem itenaryitem = new ItenaryItem();

    private IList<Country> Countries;
    private IList<Location> Locations;
    private IList<Attraction> Attractions;
    private IList<Hotel> Hotels;

    protected async override Task OnInitializedAsync()
    {
        Countries = await _client.GetFromJsonAsync<List<Country>>($"{Endpoint.CountryEndpoint}");
        Locations = await _client.GetFromJsonAsync<List<Location>>($"{Endpoint.LocationEndpoint}");
        Attractions = await _client.GetFromJsonAsync<List<Attraction>>($"{Endpoint.AttractionsEndpoint}");
        Hotels = await _client.GetFromJsonAsync<List<Hotel>>($"{Endpoint.HotelEndpoint}");
    }


    private async Task CreateItenaryItem()
    {
        await _client.PostAsJsonAsync(Endpoint.ItenaryItemsEndpoint, itenaryitem);
        _navManager.NavigateTo("/itenaryitems/");
    }

}
