@inject HttpClient _client

<EditForm Model="@location" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disbled="@Disabled">

        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@location.Name" class="form-control" />
                <ValidationMessage For="@(() => location.Name)" />
            </div>
        </div>
        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="@location.Detail" class="form-control" />
                <ValidationMessage For="@(() => location.Detail)" />
            </div>
        </div>
         <div class="form-group">
            <label>Country: </label>
            <div>
                <InputSelect @bind-Value="location.CountryId" class="form-control">
                    <option value="">-- Select Country --</option>
                    @if (Countries != null)
                    {
                        foreach (var country in Countries)
                        {
                            <option value="@country.Id">@country.Name</option>
                        }
                    }
                </InputSelect>

                <ValidationMessage For="@(() => location.CountryId)" />
            </div>
        </div>
    </fieldset>

        @if (!Disabled)
        {

            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>

        }
        <BackToList Target="locations" />
</EditForm>

@code {
  [Parameter] public bool Disabled { get; set; } = false;
  [Parameter] public Location location { get; set; }
  [Parameter] public string ButtonText { get; set; } = "Save";
  [Parameter] public EventCallback OnValidSubmit { get; set; }

  private IList<Country> Countries;


  protected async override Task OnInitializedAsync()
  {
    Countries = await _client.GetFromJsonAsync<List<Country>>($"{Endpoint.CountryEndpoint}");
  }

}
