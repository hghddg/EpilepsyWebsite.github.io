@inject HttpClient _client

<EditForm Model="@hotel" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disbled="@Disabled">

        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@hotel.Name" class="form-control" />
                <ValidationMessage For="@(() => hotel.Name)" />
            </div>
        </div>
        <div class="form-group">
            <label>Rating: </label>
            <div>
                <InputNumber @bind-Value="@hotel.Rating" class="form-control" />
                <ValidationMessage For="@(() => hotel.Rating)" />
            </div>
        </div>
        <div class="form-group">
            <label>Contact: </label>
            <div>
                <InputText @bind-Value="@hotel.Contact" class="form-control" />
                <ValidationMessage For="@(() => hotel.Contact)" />
            </div>
        </div>
        <div class="form-group">
            <label>Place: </label>
            <div>
                <InputText @bind-Value="@hotel.HLocation" class="form-control" />
                <ValidationMessage For="@(() => hotel.HLocation)" />
            </div>
        </div>
        <div class="form-group">
            <label>Location: </label>
            <div>
              <InputSelect @bind-Value="hotel.LocationID" class="form-control">
                <option value="">-- Select Location --</option>
                @if (Locations != null)
                  {
                      foreach (var location in Locations)
                      {
                          <option value="@location.Id">@location.Name</option>
                      }
                 }
              </InputSelect>
              <ValidationMessage For="@(() => hotel.LocationID)" w />
            </div>
          </div>
    </fieldset>

        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }

        <BackToList Target="hotels" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Hotel hotel { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Country> Countries;
    private IList<Location> Locations;



    protected async override Task OnInitializedAsync()
    {
      Countries = await _client.GetFromJsonAsync<List<Country>>($"{Endpoint.CountryEndpoint}");
      Locations = await _client.GetFromJsonAsync<List<Location>>($"{Endpoint.LocationEndpoint}");

    }
}
