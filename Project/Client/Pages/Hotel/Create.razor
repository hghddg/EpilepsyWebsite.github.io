@page "/hotels/create/"
@inject HttpClient _client
@inject NavigationManager _navManager


<h3 class="card-title">Create New Hotels</h3>
<hr />
<br />

<EditForm Model="@hotel" OnValidSubmit="CreateHotel">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@hotel.Name" class="form-control" />
            <ValidationMessage For="@(() => hotel.Name)" />
        </div>
    </div>
    <div class="form-group">
        <label>Rating: </label>
        <div>
            <InputNumber @bind-Value="@hotel.Rating" class="form-control" />
            <ValidationMessage For="@(() => hotel.Rating)" />
        </div>
    </div>
    <div class="form-group">
        <label>Contact: </label>
        <div>
            <InputText @bind-Value="@hotel.Contact" class="form-control" />
            <ValidationMessage For="@(() => hotel.Contact)" />
        </div>
    </div>
    <div class="form-group">
        <label>Place: </label>
        <div>
            <InputText @bind-Value="@hotel.HLocation" class="form-control" />
            <ValidationMessage For="@(() => hotel.HLocation)" />
        </div>
    </div>
    <div class="form-group">
        <label>Price: </label>
        <div>
            <InputNumber @bind-Value="@hotel.Price" class="form-control" />
            <ValidationMessage For="@(() => hotel.Price)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Hotel
    </button>
</EditForm>


@code {

    Hotel hotel = new Hotel();

    private async Task CreateHotel()
    {
        await _client.PostAsJsonAsync(Endpoint.HotelEndpoint, hotel);
        _navManager.NavigateTo("/hotels/");
    }

}
